<<: !include chip.esp8266.yaml
<<: !include common.yaml
sensor: !include_dir_merge_list wemos.d1_mini.sensor

# Generic just to put device on the wifi

# wemos1-pending.yaml
#substitutions:
#  id: wemos1
#  plug_type: wemos.d1_mini
#  board: d1_mini
#  display_name: "wemos1"
#  garage_cooldown: "15"
#<<: !include "esphome_templates/wemos.d1_mini.garagedoor.yaml"

# Relay to trip the garage door
# wemos 5v <-> relay +
# wemos gnd <-> relay -
# wemos D1 <-> relay S
switch:
- platform: gpio
  pin: D1
  id: relay_raw
  internal: true
  restore_mode: "ALWAYS_OFF"

# Momentary switch tmeplate
- platform: template
  id: relay
  turn_on_action: &click
  - if:
      condition:
          lambda: 'return !id(cooldown).state;'
      then:
      - binary_sensor.template.publish:
          id: cooldown
          state: ON
      - switch.turn_on: relay_raw
      - delay: 0.1s
      - switch.turn_off: relay_raw
  turn_off_action: *click

# Some form of button to detect if garagedoor is closed
# wemos 3v3 -> switch
# switch -> 10k Ohm Resistor -> wemos gnd
# switch -> wemos D5
# Shortcut: I soldered a 10k Ohm Resister directly between Wemos D5 and Wemos GND, this allows direct bridging of D5 and 3v3 with the switch
binary_sensor:
- platform: gpio
  pin: D5
  id: closed_sensor

# This template is the cooldown to prevent spamming the button, currently set to 10s. Need to either make it configurable or time my garage
- platform: template
  id: cooldown
  on_state:
    then:
    - if:
        condition:
          lambda: 'return id(cooldown).state;'
        then:
          - logger.log: "cooldown is active"
          - delay: "${garage_cooldown}s"
          - binary_sensor.template.publish:
              id: cooldown
              state: OFF
        else:
          - logger.log: "The sensor is off?"


cover:
- platform: template
  name: "${display_name}"
  device_class: garage
  optimistic: false
  has_position: false

  lambda: !lambda |-
      if (id(closed_sensor).state) {
        return COVER_CLOSED;
      } else {
        return COVER_OPEN;
      }

  open_action:
  - switch.turn_on: relay

  close_action:
  - switch.turn_off: relay
